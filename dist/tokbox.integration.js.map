{"version":3,"sources":["webpack://TokBox/webpack/universalModuleDefinition","webpack://TokBox/webpack/bootstrap","webpack://TokBox/./build/tokbox/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;AACb,8CAA8C,cAAc;AAC5D;AACA,oBAAoB,+BAAa,IAAI,KAAI;AACzC;AACA,oBAAoB,sCAAY,IAAI,KAAI;AACxC;AACA,oBAAoB,iBAAa,IAAI,KAAI;AACzC;AACA,qBAAqB,WAAa,IAAI,KAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC","file":"tokbox.integration.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TokBox\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TokBox\"] = factory();\n\telse\n\t\troot[\"TokBox\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./build/tokbox/index.js\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst wsServerUrl = WS_SERVER_URL || null;\n// @ts-ignore\nconst serviceUUID = SERVICE_UUID || null;\n// @ts-ignore\nconst mediaUnitId = MEDIA_UNIT_ID || null;\n// @ts-ignore\nconst statsVersion = STATS_VERSION || null;\nclass TokBox {\n    constructor() {\n        // @ts-ignore\n        this.serverURL = ObserverRTC.ParserUtil.parseWsServerUrl(wsServerUrl, serviceUUID, mediaUnitId, statsVersion);\n        // @ts-ignore\n        this.statsParser = new ObserverRTC.StatsParser();\n        // @ts-ignore\n        this.statsSender = new ObserverRTC.StatsSender(this.serverURL);\n    }\n    initialize() {\n        this.addPeerConnection = this.addPeerConnection.bind(this);\n        // @ts-ignore\n        this.observer = new ObserverRTC.ObserverBuilder(1000)\n            .attachPlugin(this.statsParser)\n            .attachPlugin(this.statsSender)\n            .build();\n        this.overridePeer(this);\n    }\n    addPeerConnection(pc) {\n        var _a, _b, _c;\n        /*\n        * Every Vonage Video API video chat occurs within a session.\n        * You can think of a session as a “room” where clients can interact with one another in real-time.\n        * Sessions are hosted on the Vonage Video API cloud and manage user connections, audio-video streams,\n        * and user events (such as a new user joining). Each session is associated with a unique session ID.\n        * To allow multiple clients to chat with one another, you would simply have them connect to the same session (using the same session ID).\n        */\n        // @ts-ignore\n        const publisher = (_a = OT === null || OT === void 0 ? void 0 : OT.publishers) === null || _a === void 0 ? void 0 : _a.find();\n        // @ts-ignore\n        const callId = (_b = publisher === null || publisher === void 0 ? void 0 : publisher.session) === null || _b === void 0 ? void 0 : _b.id;\n        // user id as stream display name\n        // @ts-ignore\n        const userId = (_c = publisher === null || publisher === void 0 ? void 0 : publisher.stream) === null || _c === void 0 ? void 0 : _c.name;\n        try {\n            console.warn('new peer connection', pc, callId, userId);\n            this.observer.addPC(pc, callId, userId);\n        }\n        catch (e) {\n            // @ts-ignore\n            ObserverRTC.logger.error(e);\n        }\n    }\n    overridePeer(that) {\n        if (!window.RTCPeerConnection)\n            return;\n        const oldRTCPeerConnection = window.RTCPeerConnection;\n        // @ts-ignore\n        // tslint:disable-next-line:only-arrow-functions\n        window.RTCPeerConnection = function () {\n            // @ts-ignore\n            const pc = new oldRTCPeerConnection(arguments);\n            that === null || that === void 0 ? void 0 : that.addPeerConnection(pc);\n            return pc;\n        };\n        for (const key of Object.keys(oldRTCPeerConnection)) {\n            // @ts-ignore\n            window.RTCPeerConnection[key] = oldRTCPeerConnection[key];\n        }\n        // @ts-ignore\n        window.RTCPeerConnection.prototype = oldRTCPeerConnection.prototype;\n    }\n}\nconst tokBoxIntegration = new TokBox();\n// @ts-ignore\ntokBoxIntegration.initialize();\nexports.default = tokBoxIntegration;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}